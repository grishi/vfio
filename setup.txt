
#Arch prep:

sudo micro /etc/default/grub
amd_iommu=on iommu=pt video=efifb:off
sudo grub-mkconfig -o /boot/grub/grub.cfg

#Use the next line for normal KVM/QEMU networking 
sudo pacman -S qemu libvirt edk2-ovmf virt-manager dnsmasq ebtables swtpm dmidecode
#sudo pacman -S qemu libvirt edk2-ovmf virt-manager
yay -S looking-glass-rc
sudo systemctl enable --now libvirtd


#Disabled next two steps to use bridge network br0.
#sudo virsh net-start default
#sudo virsh net-autostart default


#Permissiona and hooks
sudo usermod -aG kvm,input,libvirt,qemu,uucp $(whoami)

sudo mkdir -p /etc/libvirt/hooks

sudo wget 'https://raw.githubusercontent.com/PassthroughPOST/VFIO-Tools/master/libvirt_hooks/qemu' -O /etc/libvirt/hooks/qemu
	 
sudo chmod +x /etc/libvirt/hooks/qemu

sudo mkdir -p /etc/libvirt/hooks/qemu.d/win11/prepare/begin && sudo mkdir -p /etc/libvirt/hooks/qemu.d/win11/release/end && sudo touch +x /etc/libvirt/hooks/qemu.d/win11/prepare/begin/start.sh && sudo touch +x /etc/libvirt/hooks/qemu.d/win11/release/end/revert.sh

sudo micro /etc/libvirt/hooks/qemu.d/win11/prepare/begin/start.sh
sudo micro /etc/libvirt/hooks/qemu.d/win11/release/end/revert.sh

#Restore existing VM or create a new one.
#backup  kvm: virsh dumpxml win11 > /home/$(whoami)/Desktop/win11.xml
restore kvm: virsh define --file /home/$(whoami)/Desktop/win11.xml

#After creating VM, add the following for BAR support
sudo virt-xml win11 --edit --confirm --qemu-commandline="-fw_cfg opt/ovmf/X-PciMmio64Mb,string=65536"

#Looking-glass setup
sudo micro /etc/tmpfiles.d/10-looking-glass.conf
add: f    /dev/shm/looking-glass 0660 $(whoami)    kvm     -
sudo systemd-tmpfiles --create /etc/tmpfiles.d/10-looking-glass.conf
